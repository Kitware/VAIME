KWIVER v1.6.0 Release Notes
===========================

This is a minor release of KWIVER that provides both new functionality and fixes
over the previous v1.5.0 release.

Updates since v1.5.0
--------------------

Vital

Vital Algo

Vital Types

 * Add new method to metadata class to add a metadata item being
   passed by shared_ptr

Vital Plugin-loader

 * Added support for filtering plugins when they are loaded. Filter
   objects can be added to the plugin loader at run time to select or
   exclude specific plugins.

 * Added optional bit mask to load_all_plugins() which allows selected
   groups of plugins to be loaded. In addition the build/install
   directory structure for the plugins was reorganized.

Vital Util

Vital Logger

Vital Tools

Vital Types

Vital Bindings

 * Remove ctypes python bindings

 * Moved python bindings associated with config from sprokit.pipeline to
   vital.config.

Arrows

Arrows: Core

Arrows: Ceres

Arrows: CUDA

Arrows: FFmpeg

 * Added a libavfilter pipeline into the ffmpeg_video_input reader. This
   allows users to inject filters in the video reader, much the same as
   is possible in the ffmpeg command line with the -vf option.  The default
   filter applies deinterlacing to any interlaced frames.

 * Fixed the memory leak that occurred when a video was opened and closed.

Arrows: GDAL

Arrows: KPF

Arrows: OpenCV

Arrows: SfM

 * Created new SfM arrow to make a new home for structure-from-motion and
   other 3D vision code.  Much of this code will move from the "core" arrow
   which had grown too large.

 * Moved track_features applet from core into sfm.

 * Moved sfm_utils.h from core into sfm.

 * Moved initialize_cameras_landmarks_keyframe from core into sfm and renamed
   to sfm::initialize_cameras_landmarks.

Arrows: Serialization

Arrows: Super3d

Arrows: VXL

Arrows: Python

Sprokit

Sprokit: Processes

 * Added four new PyTorch-using Python Sprokit processes for tracking
   (srnn_tracker), descriptor computation (alexnet_descriptors and
   resnet_descriptors), and augmentation (resnet_augmentation).

Tools

Build System

 * Added a new build flag, KWIVER_ENABLE_PYTORCH, to include
   PyTorch-dependent code in the build.

Unit Tests

General Documentation

Bug Fixes
---------

Arrows: Core

Arrows: Ceres

Arrows: Super3D

Sprokit: Processes

 * Fixed the compute_track_descriptors process's handling of null
   output from its nested algorithm.
